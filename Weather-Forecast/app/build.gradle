apply plugin: 'com.android.application'

def globalConf = rootProject.ext

android {
    compileSdkVersion globalConf.androidTargetSdkVersion
    defaultConfig {
        applicationId globalConf.androidApplicationId
        minSdkVersion globalConf.androidMinSdkVersion
        targetSdkVersion globalConf.androidTargetSdkVersion
        versionCode globalConf.versionCode
        versionName globalConf.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            buildConfigField "String", "DARK_SKY_API_KEY", "\"${globalConf.DARK_SKY_API_KEY}\""
        }

        release {
            buildConfigField "String", "DARK_SKY_API_KEY", "\"${globalConf.DARK_SKY_API_KEY}\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile project(path: ':SkyconsLibrary')

    Map<String, String> dependencies = globalConf.dependencies

    // Android support libraries
    implementation dependencies.appCompat
    implementation dependencies.recyclerView
    implementation dependencies.supportV4
    implementation dependencies.supportDesign

    // Dagger 2
    implementation dependencies.dagger2
    annotationProcessor dependencies.dagger2Apt

    // RxJava
    implementation dependencies.rxJava2
    implementation dependencies.rxAndroid
    implementation dependencies.rxBinding
    implementation dependencies.rxRecyclerViewBinding
    implementation dependencies.rxBindingV4Binding

    // Network
    implementation dependencies.retrofit
    implementation dependencies.okHttp3
    implementation dependencies.retrofitRxJava2Adapter
    implementation dependencies.retrofitGsonConversion
    implementation dependencies.okHttp3Interceptor

    // ButterKnife
    implementation dependencies.butterKnife
    annotationProcessor dependencies.butterKnifeApt

    // Monitoring
    debugImplementation dependencies.leakCanaryDebug
    releaseImplementation dependencies.leakCanaryRelease

    // Testing
    testImplementation dependencies.junit
    androidTestImplementation(dependencies.testRunner) {
        exclude module: 'support-annotations'
    }
}
